{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.36.1.42791",
      "templateHash": "2559819710382385703"
    }
  },
  "parameters": {
    "env": {
      "type": "string",
      "metadata": {
        "description": "Chose a variable for the environment. Example: dev, test, soc"
      }
    },
    "useExistingWorkspace": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Set to true to use an existing Log Analytics Workspace, false to create a new one"
      }
    },
    "existingWorkspaceResourceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Resource ID of existing Log Analytics Workspace (required if useExistingWorkspace is true)"
      }
    }
  },
  "variables": {
    "environmentid": "[uniqueString(tenant().tenantId, subscription().id, parameters('env'))]",
    "location": "[resourceGroup().location]"
  },
  "resources": [
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2024-11-30",
      "name": "[format('umi-mdeautomator-{0}', variables('environmentid'))]",
      "location": "[variables('location')]"
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[guid(variables('environmentid'), 'ba92f5b4-2d11-453d-a403-e96b0029c9fe', subscription().id)]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('umi-mdeautomator-{0}', variables('environmentid'))), '2024-11-30').principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('umi-mdeautomator-{0}', variables('environmentid')))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[guid(variables('environmentid'), '0a9a7e1f-b9d0-4cc4-a60d-0319b160aaa3', subscription().id)]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '0a9a7e1f-b9d0-4cc4-a60d-0319b160aaa3')]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('umi-mdeautomator-{0}', variables('environmentid'))), '2024-11-30').principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('umi-mdeautomator-{0}', variables('environmentid')))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[guid(variables('environmentid'), '3913510d-42f4-4e42-8a64-420c390055eb', subscription().id)]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '3913510d-42f4-4e42-8a64-420c390055eb')]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('umi-mdeautomator-{0}', variables('environmentid'))), '2024-11-30').principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('umi-mdeautomator-{0}', variables('environmentid')))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2024-01-01",
      "name": "[format('stmdeauto{0}', variables('environmentid'))]",
      "location": "[variables('location')]",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('umi-mdeautomator-{0}', variables('environmentid'))))]": {}
        }
      },
      "kind": "StorageV2",
      "sku": {
        "name": "Standard_LRS"
      },
      "properties": {
        "encryption": {
          "keySource": "Microsoft.Storage",
          "requireInfrastructureEncryption": true,
          "services": {
            "blob": {
              "enabled": true
            },
            "file": {
              "enabled": true
            },
            "queue": {
              "enabled": true,
              "keyType": "Service"
            },
            "table": {
              "enabled": true,
              "keyType": "Service"
            }
          }
        },
        "allowBlobPublicAccess": false,
        "supportsHttpsTrafficOnly": true,
        "publicNetworkAccess": "Enabled",
        "minimumTlsVersion": "TLS1_2"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('umi-mdeautomator-{0}', variables('environmentid')))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2024-01-01",
      "name": "[format('{0}/{1}', format('stmdeauto{0}', variables('environmentid')), 'default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', format('stmdeauto{0}', variables('environmentid')))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2024-01-01",
      "name": "[format('{0}/{1}/{2}', format('stmdeauto{0}', variables('environmentid')), 'default', 'packages')]",
      "properties": {
        "publicAccess": "None"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', format('stmdeauto{0}', variables('environmentid')), 'default')]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2024-01-01",
      "name": "[format('{0}/{1}/{2}', format('stmdeauto{0}', variables('environmentid')), 'default', 'files')]",
      "properties": {
        "publicAccess": "None"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', format('stmdeauto{0}', variables('environmentid')), 'default')]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2024-01-01",
      "name": "[format('{0}/{1}/{2}', format('stmdeauto{0}', variables('environmentid')), 'default', 'payloads')]",
      "properties": {
        "publicAccess": "None"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', format('stmdeauto{0}', variables('environmentid')), 'default')]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2024-01-01",
      "name": "[format('{0}/{1}/{2}', format('stmdeauto{0}', variables('environmentid')), 'default', 'output')]",
      "properties": {
        "publicAccess": "None"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', format('stmdeauto{0}', variables('environmentid')), 'default')]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2024-01-01",
      "name": "[format('{0}/{1}/{2}', format('stmdeauto{0}', variables('environmentid')), 'default', 'detections')]",
      "properties": {
        "publicAccess": "None"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', format('stmdeauto{0}', variables('environmentid')), 'default')]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2024-01-01",
      "name": "[format('{0}/{1}/{2}', format('stmdeauto{0}', variables('environmentid')), 'default', 'huntquery')]",
      "properties": {
        "publicAccess": "None"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', format('stmdeauto{0}', variables('environmentid')), 'default')]"
      ]
    },
    {
      "condition": "[not(parameters('useExistingWorkspace'))]",
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2023-09-01",
      "name": "[format('log-mdeautomator-{0}', variables('environmentid'))]",
      "location": "[variables('location')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": 30
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[format('appi-mdeauto{0}', variables('environmentid'))]",
      "location": "[variables('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "RetentionInDays": 60,
        "WorkspaceResourceId": "[if(parameters('useExistingWorkspace'), parameters('existingWorkspaceResourceId'), resourceId('Microsoft.OperationalInsights/workspaces', format('log-mdeautomator-{0}', variables('environmentid'))))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', format('log-mdeautomator-{0}', variables('environmentid')))]"
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2024-04-01",
      "name": "[format('asp-mdeautomator-func-{0}', variables('environmentid'))]",
      "location": "[variables('location')]",
      "properties": {
        "reserved": false,
        "elasticScaleEnabled": true,
        "maximumElasticWorkerCount": 2
      },
      "sku": {
        "tier": "ElasticPremium",
        "name": "EP1"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2023-12-01",
      "name": "[format('funcmdeauto{0}', variables('environmentid'))]",
      "kind": "functionapp",
      "location": "[variables('location')]",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('umi-mdeautomator-{0}', variables('environmentid'))))]": {}
        }
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', format('asp-mdeautomator-func-{0}', variables('environmentid')))]",
        "publicNetworkAccess": "Enabled",
        "httpsOnly": true,
        "siteConfig": {
          "autoHealEnabled": true,
          "detailedErrorLoggingEnabled": true,
          "httpLoggingEnabled": true,
          "cors": {
            "allowedOrigins": [
              "https://portal.azure.com",
              "https://preview.portal.azure.com",
              "[format('https://{0}', reference(resourceId('Microsoft.Web/sites', format('ase-mdeautomator-{0}', variables('environmentid'))), '2022-09-01').defaultHostName)]"
            ],
            "supportCredentials": true
          },
          "preWarmedInstanceCount": 10,
          "remoteDebuggingEnabled": false,
          "requestTracingEnabled": true,
          "scmMinTlsVersion": "1.2",
          "http20Enabled": true,
          "functionAppScaleLimit": 100,
          "functionsRuntimeScaleMonitoringEnabled": true,
          "appSettings": [
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
              "value": "[reference(resourceId('Microsoft.Insights/components', format('appi-mdeauto{0}', variables('environmentid'))), '2020-02-02').ConnectionString]"
            },
            {
              "name": "APPLICATIONINSIGHTS_AUTHENTICATION_STRING",
              "value": "[format('Authorization=AAD;ClientId={0}', reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('umi-mdeautomator-{0}', variables('environmentid'))), '2024-11-30').clientId)]"
            },
            {
              "name": "ApplicationInsightsAgent_EXTENSION_VERSION",
              "value": "~3"
            },
            {
              "name": "APPLICATIONINSIGHTS_ENABLE_AGENT",
              "value": "true"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "powershell"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1}', format('stmdeauto{0}', variables('environmentid')), listKeys(resourceId('Microsoft.Storage/storageAccounts', format('stmdeauto{0}', variables('environmentid'))), '2024-01-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1}', format('stmdeauto{0}', variables('environmentid')), listKeys(resourceId('Microsoft.Storage/storageAccounts', format('stmdeauto{0}', variables('environmentid'))), '2024-01-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "https://github.com/msdirtbag/MDEAutomator/raw/refs/heads/main/payloads/MDEAutomator.zip?isAsync=true"
            },
            {
              "name": "FUNCTIONS_WORKER_PROCESS_COUNT",
              "value": "10"
            },
            {
              "name": "PSWorkerInProcConcurrencyUpperBound",
              "value": "1000"
            },
            {
              "name": "AZURE_CLIENT_ID",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('umi-mdeautomator-{0}', variables('environmentid'))), '2024-11-30').clientId]"
            },
            {
              "name": "SUBSCRIPTION_ID",
              "value": "[subscription().subscriptionId]"
            },
            {
              "name": "STORAGE_ACCOUNT",
              "value": "[format('stmdeauto{0}', variables('environmentid'))]"
            },
            {
              "name": "SPNID",
              "value": ""
            }
          ],
          "use32BitWorkerProcess": false,
          "ftpsState": "Disabled",
          "powerShellVersion": "7.4"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', format('appi-mdeauto{0}', variables('environmentid')))]",
        "[resourceId('Microsoft.Web/sites', format('ase-mdeautomator-{0}', variables('environmentid')))]",
        "[resourceId('Microsoft.Web/serverfarms', format('asp-mdeautomator-func-{0}', variables('environmentid')))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('umi-mdeautomator-{0}', variables('environmentid')))]",
        "[resourceId('Microsoft.Storage/storageAccounts', format('stmdeauto{0}', variables('environmentid')))]"
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2024-04-01",
      "name": "[format('asp-mdeautomator-web-{0}', variables('environmentid'))]",
      "location": "[variables('location')]",
      "properties": {
        "reserved": true
      },
      "sku": {
        "tier": "Basic",
        "name": "B1"
      },
      "kind": "linux"
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-09-01",
      "name": "[format('ase-mdeautomator-{0}', variables('environmentid'))]",
      "location": "[variables('location')]",
      "kind": "container",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', format('asp-mdeautomator-web-{0}', variables('environmentid')))]",
        "publicNetworkAccess": "Enabled",
        "httpsOnly": true,
        "siteConfig": {
          "linuxFxVersion": "DOCKER|msdirtbag/mdeautomator:latest",
          "numberOfWorkers": 1,
          "requestTracingEnabled": false,
          "remoteDebuggingEnabled": false,
          "httpLoggingEnabled": true,
          "logsDirectorySizeLimit": 35,
          "detailedErrorLoggingEnabled": true,
          "webSocketsEnabled": true,
          "alwaysOn": true,
          "autoHealEnabled": true,
          "ipSecurityRestrictions": [
            {
              "ipAddress": "Any",
              "action": "Allow",
              "priority": 2147483647,
              "name": "Allow all",
              "description": "Allow all access"
            }
          ],
          "scmIpSecurityRestrictions": [
            {
              "ipAddress": "Any",
              "action": "Deny",
              "priority": 2147483647,
              "name": "Block all",
              "description": "Block all access"
            }
          ],
          "scmIpSecurityRestrictionsUseMain": false,
          "http20Enabled": false,
          "minTlsVersion": "1.2",
          "scmMinTlsVersion": "1.2",
          "ftpsState": "Disabled",
          "minimumElasticInstanceCount": 1
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', format('asp-mdeautomator-web-{0}', variables('environmentid')))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}/{1}', format('ase-mdeautomator-{0}', variables('environmentid')), 'appsettings')]",
      "kind": "calappsettings",
      "properties": {
        "FUNCKEY": "[listKeys(resourceId('Microsoft.Web/sites/host', format('funcmdeauto{0}', variables('environmentid')), 'default'), '2022-03-01').functionKeys.default]",
        "FUNCURL": "[reference(resourceId('Microsoft.Web/sites', format('funcmdeauto{0}', variables('environmentid'))), '2023-12-01').defaultHostName]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', format('ase-mdeautomator-{0}', variables('environmentid')))]",
        "[resourceId('Microsoft.Web/sites', format('funcmdeauto{0}', variables('environmentid')))]"
      ]
    }
  ]
}